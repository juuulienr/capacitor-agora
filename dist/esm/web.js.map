{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport type { AgoraPlugin } from './definitions';\n\nexport class AgoraWeb extends WebPlugin implements AgoraPlugin {\n  private client: any;\n  private localVideoTrack: any;\n  private localAudioTrack: any;\n\n  async initialize(options: { appId: string }): Promise<void> {\n    console.log('[AgoraWeb] initialize called with options:', options);\n\n    const AgoraRTC = (window as any).AgoraRTC;\n    if (!AgoraRTC) {\n      throw new Error('[AgoraWeb] AgoraRTC is not available. Ensure you included the AgoraRTC script.');\n    }\n\n    // Création d'un client Agora\n    this.client = AgoraRTC.createClient({ mode: 'rtc', codec: 'vp8' });\n    console.log('[AgoraWeb] AgoraRTC client created');\n  }\n\n  async setupLocalVideo(): Promise<void> {\n    console.log('[AgoraWeb] setupLocalVideo called');\n\n    const AgoraRTC = (window as any).AgoraRTC;\n    if (!AgoraRTC) {\n      throw new Error('[AgoraWeb] AgoraRTC is not available.');\n    }\n\n    // Création des pistes vidéo et audio locales\n    this.localVideoTrack = await AgoraRTC.createCameraVideoTrack();\n    this.localAudioTrack = await AgoraRTC.createMicrophoneAudioTrack();\n\n    // Lecture de la vidéo locale dans un conteneur DOM\n    const container = document.createElement('div');\n    container.id = 'local-video';\n    container.style.width = '100%';\n    container.style.height = '100%';\n    document.body.appendChild(container);\n\n    this.localVideoTrack.play('local-video');\n    console.log('[AgoraWeb] Local video track started');\n  }\n\n  async joinChannel(options: { channelName: string; token: string | null; uid: number }): Promise<void> {\n    console.log('[AgoraWeb] joinChannel called with options:', options);\n\n    if (!this.client) {\n      throw new Error('[AgoraWeb] Client is not initialized. Call initialize() first.');\n    }\n\n    // Rejoindre un canal avec le client et les pistes locales\n    await this.client.join(options.token, options.channelName, options.uid);\n    console.log('[AgoraWeb] Joined channel:', options.channelName);\n\n    if (this.localAudioTrack && this.localVideoTrack) {\n      await this.client.publish([this.localAudioTrack, this.localVideoTrack]);\n      console.log('[AgoraWeb] Local audio and video tracks published');\n    }\n  }\n\n  async switchCamera(): Promise<void> {\n    console.log('[AgoraWeb] switchCamera called');\n\n    if (!this.localVideoTrack) {\n      throw new Error('[AgoraWeb] Local video track is not initialized.');\n    }\n\n    await this.localVideoTrack.setDevice('next');\n    console.log('[AgoraWeb] Camera switched');\n  }\n\n  async leaveChannel(): Promise<void> {\n    console.log('[AgoraWeb] leaveChannel called');\n\n    if (!this.client) {\n      throw new Error('[AgoraWeb] Client is not initialized.');\n    }\n\n    // Arrête les pistes locales\n    if (this.localVideoTrack) {\n      this.localVideoTrack.stop();\n      this.localVideoTrack.close();\n    }\n    if (this.localAudioTrack) {\n      this.localAudioTrack.stop();\n      this.localAudioTrack.close();\n    }\n\n    // Quitte le canal\n    await this.client.leave();\n    console.log('[AgoraWeb] Left channel');\n  }\n\n  async enableWebViewTransparency(): Promise<void> {\n    console.log('[AgoraWeb] enableWebViewTransparency called');\n    // Implémentation Web spécifique si applicable\n    throw this.unimplemented('[AgoraWeb] enableWebViewTransparency is not implemented on the web.');\n  }\n\n  async disableWebViewTransparency(): Promise<void> {\n    console.log('[AgoraWeb] disableWebViewTransparency called');\n    // Implémentation Web spécifique si applicable\n    throw this.unimplemented('[AgoraWeb] disableWebViewTransparency is not implemented on the web.');\n  }\n}\n"]}