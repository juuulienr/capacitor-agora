{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport type { AgoraPlugin } from './definitions';\n\nexport class AgoraWeb extends WebPlugin implements AgoraPlugin {\n  private client: any;\n  private localVideoTrack: any;\n  private localAudioTrack: any;\n  private appId: string | null = null;\n\n  async initialize(options: { appId: string }): Promise<void> {\n    const AgoraRTC = (window as any).AgoraRTC;\n    if (!AgoraRTC) {\n      throw new Error('[AgoraWeb] AgoraRTC is not available. Ensure you included the AgoraRTC script.');\n    }\n\n    if (!options.appId) {\n      throw new Error('App ID is required');\n    }\n\n    this.appId = options.appId;\n    this.client = AgoraRTC.createClient({ mode: 'live', codec: 'vp8' });\n    console.log('[AgoraWeb] AgoraRTC client created');\n  }\n\n  async setupLocalVideo(): Promise<void> {\n    const AgoraRTC = (window as any).AgoraRTC;\n    if (!AgoraRTC) {\n      throw new Error('[AgoraWeb] AgoraRTC is not available.');\n    }\n\n    try {\n      const livestreamContainer = document.querySelector('.livestream');\n      if (!livestreamContainer) {\n        throw new Error('[AgoraWeb] No element found with class \"livestream\". Ensure it exists in the DOM.');\n      }\n\n      this.localAudioTrack = await AgoraRTC.createMicrophoneAudioTrack();\n      this.localVideoTrack = await AgoraRTC.createCameraVideoTrack({ \n        encoderConfig: '1080p'\n      });\n\n      const videoContainer = document.createElement('div');\n      videoContainer.id = 'local-video';\n      videoContainer.style.width = '100%';\n      videoContainer.style.height = '100%';\n\n      livestreamContainer.appendChild(videoContainer);\n      this.localVideoTrack.play('local-video');\n      console.log('[AgoraWeb] Local video track started');\n    } catch (error) {\n      console.error('[AgoraWeb] Error in setupLocalVideo:', error);\n      throw error;\n    }\n  }\n\n  async joinChannel(options: { channelName: string; token: string | null; uid: number }): Promise<void> {\n    if (!this.client) {\n      throw new Error('Client is not initialized. Call initialize() first.');\n    }\n  \n    if (!this.appId) {\n      throw new Error('App ID is not initialized. Call initialize() first.');\n    }\n  \n    try {\n      await this.client.setClientRole('host');\n      await this.client.join(this.appId, options.channelName, options.token, options.uid);\n      console.log('[AgoraWeb] Successfully joined channel:', options.channelName);\n  \n      if (this.localAudioTrack && this.localVideoTrack) {\n        await this.client.publish([this.localAudioTrack, this.localVideoTrack]);\n        console.log('[AgoraWeb] Local audio and video tracks published');\n      }\n    } catch (error) {\n      console.error('[AgoraWeb] Error while joining channel:', error);\n      throw error;\n    }\n  }\n\n  async leaveChannel(): Promise<void> {\n    if (!this.client) {\n      throw new Error('[AgoraWeb] Client is not initialized.');\n    }\n\n    if (this.localVideoTrack) {\n      this.localVideoTrack.stop();\n      this.localVideoTrack.close();\n    }\n    if (this.localAudioTrack) {\n      this.localAudioTrack.stop();\n      this.localAudioTrack.close();\n    }\n    \n    const localVideoDiv = document.getElementById('local-video');\n    if (localVideoDiv) {\n      localVideoDiv.remove();\n      console.log('[AgoraWeb] Local video div removed');\n    }\n\n    await this.client.leave();\n    console.log('[AgoraWeb] Left channel');\n  }\n  \n  async switchCamera(): Promise<void> {\n    console.log('[AgoraWeb] switchCamera called');\n    throw this.unimplemented('[AgoraWeb] switchCamera is not implemented on the web.');\n  }\n  \n  async requestPermissions(): Promise<void> {\n    console.log('[AgoraWeb] requestPermissions called');\n    throw this.unimplemented('[AgoraWeb] requestPermissions is not implemented on the web.');\n  }\n}\n"]}